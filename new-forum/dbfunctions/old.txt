
// func GetPostByID(db *sql.DB, postID int) (*Post, error) {
// 	var post Post

// 	err := db.QueryRow("SELECT id, user_id, title, content, created_at FROM posts WHERE id = ?", postID).Scan(&post.ID, &post.UserID, &post.Title, &post.Content, &post.CreatedAt)
// 	if err != nil {
// 		return nil, err
// 	}

// 	return &post, nil
// }


// func GetAllCommentsByPostID(db *sql.DB, postID int) ([]*Comment, error) {
// 	var comments []*Comment

// 	rows, err := db.Query("SELECT id, user_id, post_id, content, created FROM comments WHERE post_id = ?", postID)
// 	if err != nil {
// 		return nil, err
// 	}
// 	defer rows.Close()

// 	for rows.Next() {
// 		var comment Comment
// 		err := rows.Scan(&comment.ID, &comment.UserID, &comment.PostID, &comment.Content, &comment.CreatedAt)
// 		if err != nil {
// 			return nil, err
// 		}
// 		comments = append(comments, &comment)
// 	}

// 	if err := rows.Err(); err != nil {
// 		return nil, err
// 	}

// 	return comments, nil
// }

// func GetAllPosts(db *sql.DB) ([]*Post, error) {
// 	var posts []*Post

// 	rows, err := db.Query("SELECT id, user_id, title, content, created FROM posts")
// 	if err != nil {
// 		return nil, err
// 	}
// 	defer rows.Close()

// 	for rows.Next() {
// 		var post Post
// 		err := rows.Scan(&post.ID, &post.UserID, &post.Title, &post.Content, &post.CreatedAt)
// 		if err != nil {
// 			return nil, err
// 		}
// 		posts = append(posts, &post)
// 	}

// 	if err := rows.Err(); err != nil {
// 		return nil, err
// 	}

// 	return posts, nil
// }

// func GetCommentByID(db *sql.DB, commentID int) (*Comment, error) {
// 	var comment Comment

// 	err := db.QueryRow("SELECT id, user_id, post_id, content, created_at FROM comments WHERE id = ?", commentID).Scan(&comment.ID, &comment.UserID, &comment.PostID, &comment.Content, &comment.CreatedAt)
// 	if err != nil {
// 		return nil, err
// 	}

// 	return &comment, nil
// }
